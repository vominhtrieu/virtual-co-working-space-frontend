/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useState } from "react";

export default function Hair(props) {
  const [hairStyle, setHairStyle] = useState(null);

  const group = useRef();
  const { nodes, materials } = useGLTF("/Models/Character.glb");

  useEffect(() => {
    switch (props.hairStyle) {
      case 1:
        setHairStyle(
          <skinnedMesh
            geometry={nodes.Hair_1.geometry}
            material={materials["Hair 1"]}
            skeleton={nodes.Hair_1.skeleton}
          />
        );
        break;
      case 2:
        setHairStyle(
          <skinnedMesh
            geometry={nodes.Hair_2.geometry}
            material={materials["Hair 2"]}
            skeleton={nodes.Hair_2.skeleton}
          />
        );
        break;

      default:
        setHairStyle(
          <skinnedMesh
            geometry={nodes.Hair_1.geometry}
            material={materials["Hair 1"]}
            skeleton={nodes.Hair_1.skeleton}
          />
        );
        break;
    }
  }, [nodes, materials, props.hairStyle]);

  return (
    <group ref={group} {...props} dispose={null} scale={[2, 2, 2]}>
      <skinnedMesh
        geometry={nodes.Cube001_1.geometry}
        skeleton={nodes.Cube001_1.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube001_2.geometry}
        skeleton={nodes.Cube001_2.skeleton}
      />
      {hairStyle}
    </group>
  );
}

useGLTF.preload("/Character.glb");
